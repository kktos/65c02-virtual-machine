@font-face { font-family: PrintChar21; src: url("/assets/fonts/PrintChar21.ttf"); }
@font-face { font-family: PRNumber3; src: url("/assets/fonts/PRNumber3.ttf"); }
BODY {
	font-family: PrintChar21;
	/* position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	margin: 0;
	display: grid;
	grid-auto-flow: column;
	grid-template-columns: 1fr 1fr; */
	background-color: #353535;
}
#screen {
    width: 800px;
    aspect-ratio: 280/192;
}
#debugger {
	position: absolute;
	visibility: hidden;
	top: 10px;
	left: 730px;
	background-color: #182e40e6;
	color: #29f529;
	font-size: 8px;
	padding: 5px;
	display: grid;
	grid-template: " btns    btns    btns" 30px
					"disasm registers mem " 150px
					"disasm   stack   mem " 110px
					"disasm   bps     mem "
					/* "log      log     log " 1fr */
					/auto 80px auto;
	grid-gap: 10px;
	border: 1px solid white;
	overflow: hidden;

}
.log {
	display: none;
    grid-area: log;
    background: black;
    padding: 5px;
    overflow-y: scroll;
	font-family: monospace;
    white-space: pre;
    font-size: 16px;
}
.log-disk {
	color: #e54e4e;
    text-align: end;
}
.log-cpu {
	color: rgb(35, 99, 173);
}
/* #screen {
	width: 100%;;
	height: 100%;;
} */
#disasm {
	grid-area: disasm;
	display: grid;
	grid-gap: 3px;
	grid-template-columns: 350px;
	grid-auto-rows: min-content;
}
#disasm .line {
	display: grid;
	grid-template-columns: 1fr 1fr;
}
#disasm .instruction {
	display: grid;
	grid-template: "bank addr disasm" auto/auto auto 1fr;
}
#disasm .bank:before {
	content: attr(data-bank);
}
#disasm .addr:before {
	content: attr(data-addr);
}
#disasm .bank {
	cursor: pointer;
	grid-area: bank;
}
#disasm .addr {
	cursor: pointer;
	grid-area: addr;
}
#disasm .disasm {
	grid-area: disasm;
	padding-left: 10px;
}
#disasm .comment:before {
	content: ";";
}
#btns {
	grid-area: btns;
	background-color: #ffffff;
	display: grid;
	grid-auto-flow: column;
	align-items: center;
	grid-auto-columns: min-content;
	grid-gap: 0 14px;
}
.btn {
	cursor: pointer;
}
.icn.btn {
	width: 20px;
}
.btn.running.paused {
	cursor: default;
	opacity: .3;
}
.btn.running.play {
	display: none;
}
.btn.pause:not(.running) {
	display: none;
}
#registers {
	grid-area: registers;
	display: grid;
	grid-template-rows: repeat(5,20px);
	grid-template-columns: 30px auto;
	grid-auto-rows: min-content;
	justify-items: center;
}
.register {
	cursor: pointer;
}
.p.register {
	display: grid;
	grid-auto-flow: column;
	grid-column: span 2;
	grid-gap: 2px;
	padding: 7px;
}
#mem {
	grid-area: mem;
	display: grid;
	grid-gap: 3px;
	grid-auto-rows: min-content;
}
#mem .addr {
	display: grid;
    grid-auto-flow: column;
    justify-content: left;
    grid-gap: 6px;
	cursor: pointer;
	white-space: nowrap;
}
#mem .addr.real {
		color: red;
}
#mem .value:hover {
	outline: 1px solid white;
}
#stack {
	grid-area: stack;
	align-self: center;
	justify-self: center;
}
#bps {
	grid-area: bps;
	cursor: pointer;
}
#bps>div {
    display: grid;
    grid-auto-flow: column;
	grid-template-columns: auto 1fr;
	grid-gap: 5px;
}
.selected {
	color: white;
}
INPUT {
	width: 40px;
	text-align: right;
}
.label {
	color: #000000;
}
.asm {
	visibility: hidden;
	grid-column: 1 / 4;
    grid-row: 1 / 4;
    background: black;
    margin: 0;
	display: grid;
	grid-template:
        "btns" 30px
        "src"/auto;
	z-index: 1;
	position: relative;
}
#editor {
	font-size: 1.5em;
	margin-inline: 10px;
}
.asm-src {
    grid-area: src;
	position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
	overflow-y: scroll;
}
[contenteditable]:focus {
    outline: 0px solid transparent;
}
